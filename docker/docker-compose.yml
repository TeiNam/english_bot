services:
  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    environment:
      - TZ=Asia/Seoul
      - MYSQL_HOST=db
      - MYSQL_PORT=3306
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
    environment:
      - TZ=Asia/Seoul
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network

  ddb:
    image: mysql:8.0
    environment:
      - TZ=Asia/Seoul
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    command: [ 'mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci', '--default-time-zone=+09:00' ]
    volumes:
      - mysql-data:/var/lib/mysql
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql  # 초기화 스크립트 추가
    ports:
      - "3306:3306"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data: